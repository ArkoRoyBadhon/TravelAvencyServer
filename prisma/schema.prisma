// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id             String           @id @default(uuid())
  name           String
  email          String           @unique
  password       String
  contactNo      String           @unique
  age            Int?
  role           String           @default("user")
  bloodGroup     String?
  city           String?
  address        String?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Feedback       Feedback[]
  Service        Service[]
  serviceBooking serviceBooking[]
}

model Feedback {
  id String @id @default(uuid())

  userInfo User   @relation(fields: [userId], references: [id])
  userId   String

  comments   String
  suggestion String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


enum SeatType {
  single
  double
}

model Service {
  id String @id @default(uuid())

  title          String
  img            String
  tourLocation   String
  pickupLocation String
  pickupTime     DateTime
  duration       String
  availableSeats Int
  hotelSeatType  SeatType    @default(single)
  description    String
  availability   Boolean
  price          Int

  userInfo User   @relation(fields: [userId], references: [id])
  userId   String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Reviews   Reviews[]
}

model Reviews {
  id      String @id @default(uuid())
  reviews String
  ratings Int

  service   Service @relation(fields: [serviceId], references: [id])
  serviceId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id    String @id @default(uuid())
  title String

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  blogContent blogContent[]
}

model blogContent {
  id          String @id @default(uuid())
  title       String
  img         String
  description String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model faqContent {
  id          String @id @default(uuid())
  title       String
  description String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model serviceBooking {
  id        String   @id @default(uuid())
  booked    User     @relation(fields: [bookedBy], references: [id])
  bookedBy  String
  serviceId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}